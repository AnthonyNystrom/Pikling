<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>Image(TColor, TDepth) Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="a8929aab-99c5-79cf-385c-dcec7769fea1" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:Emgu.CV.Image`2" /><MSHelp:Keyword Index="A" Term="T:Emgu.CV.Image`2" /><MSHelp:Keyword Index="A" Term="frlrfEmguCVImageClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfEmguCVImageMembersTopic" /><MSHelp:Keyword Index="K" Term="Image%3CTColor%2C TDepth%3E class" /><MSHelp:Keyword Index="K" Term="Image(Of TColor%2C TDepth) class" /><MSHelp:Keyword Index="K" Term="Emgu.CV.Image%3CTColor%2C TDepth%3E class" /><MSHelp:Keyword Index="K" Term="Emgu.CV.Image(Of TColor%2C TDepth) class" /><MSHelp:Keyword Index="F" Term="Image(TColor, TDepth)" /><MSHelp:Keyword Index="F" Term="Emgu.CV.Image(TColor, TDepth)" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Emgu.CV.dll" /><MSHelp:Attr Name="APIName" Value="Emgu.CV.Image`2" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="A wrapper for IplImage" /></xml></head><body><div id="control"><span class="productTitle">Emgu CV Library Documentation</span><br /><span class="topicTitle">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="typeparameter">TColor</span>, <span class="typeparameter">TDepth</span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span> Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="b72c032d-59ae-c36f-5e00-12f8d621dfb8.htm">Emgu.CV</a> ► <span class="selflink">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><script type="text/javascript"><!--
google_ad_client = "pub-0111567351193216";
/* 728x90, created 8/14/08 */
google_ad_slot = "3483381042";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p><span style="color: DarkGray">www.emgu.com/wiki </span><div class="summary">
            A wrapper for IplImage
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre>[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Image</span>&lt;TColor, TDepth&gt; : <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a>&lt;TDepth&gt;, 
	<a href="189c8a15-d729-70cf-1ed8-82590a84cdad.htm">IImage</a>, <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_blank">ICloneable</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>&lt;<span class="selflink">Image</span>&lt;TColor, TDepth&gt;&gt;
<span class="keyword">where</span> TColor : <span class="keyword">struct</span>, <span class="keyword">new</span>(), <a href="e3493674-ab03-fba9-08e7-dc4724ddc6d4.htm">IColor</a>
</pre></div><div class="code" x-lang="VisualBasic"><pre>&lt;<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>&gt; _
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Image</span>(<span class="keyword">Of</span> TColor <span class="keyword">As</span> {<span class="keyword">Structure</span>, <span class="keyword">New</span>, <a href="e3493674-ab03-fba9-08e7-dc4724ddc6d4.htm">IColor</a>}, TDepth) _
	<span class="keyword">Inherits</span> <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a>(<span class="keyword">Of</span> TDepth) _
	<span class="keyword">Implements</span> <a href="189c8a15-d729-70cf-1ed8-82590a84cdad.htm">IImage</a>, <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_blank">ICloneable</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>(<span class="keyword">Of</span> <span class="selflink">Image</span>(<span class="keyword">Of</span> TColor, TDepth))</pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre>[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TColor, <span class="keyword">typename</span> TDepth&gt;
<span class="keyword">where</span> TColor : <span class="keyword">value class</span>, <span class="keyword">gcnew</span>(), <a href="e3493674-ab03-fba9-08e7-dc4724ddc6d4.htm">IColor</a>
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Image</span> : <span class="keyword">public</span> <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a>&lt;TDepth&gt;, 
	<a href="189c8a15-d729-70cf-1ed8-82590a84cdad.htm">IImage</a>, <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_blank">ICloneable</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>&lt;<span class="selflink">Image</span>&lt;TColor, TDepth&gt;^&gt;</pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Generic Template Parameters</div><div class="sectionContent"><dl><dt><span class="parameter">TColor</span></dt><dd>Color type of this image (either Gray, Bgr, Bgra, Hsv, Hls, Lab, Luv, Xyz or Ycc)</dd><dt><span class="parameter">TDepth</span></dt><dd>Depth of this image (either Byte, SByte, Single, double, UInt16, Int16 or Int32)</dd></dl></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="8b7ee367-ac1a-3d90-940d-51f4cf3759d5.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Create an empty Image
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="84dd94e7-f03f-ceb8-f629-8462326d13a6.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>TDepth<span class="languageSpecificText"><span class="cpp">,3&gt;</span><span class="cs">[,,]</span><span class="vb">(,,)</span><span class="nu">[,,]</span></span>)</a></td><td><div class="summary">
            Create image from the specific multi-dimensional data, where the 1st dimesion is # of rows (height), the 2nd dimension is # cols (cols) and the 3rd dimension is the channel
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="190488cc-a925-a787-a52c-0ce7ea1e372f.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(String)</a></td><td><div class="summary">
            Read image from a file
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="791fbe59-17c0-26e7-efa7-a1d1ad146ac4.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Bitmap)</a></td><td><div class="summary">
            Obtain the image from the specific Bitmap
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4fdc5afb-7214-85c7-75d7-c72fa26ff4df.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Int32, Int32, TColor)</a></td><td><div class="summary">
            Create a blank Image of the specified width, height and color.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="49f9fa3a-0e96-706e-6880-9f650e018fbd.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Int32, Int32)</a></td><td><div class="summary">
            Create a blank Image of the specified width and height. 
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="007f15f0-ac8f-147d-d8e7-8b9371be241f.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Size)</a></td><td><div class="summary">
            Create a blank Image of the specific size
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cfae75db-b813-9bc0-b35c-67446b591173.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Create a multi-channel image from multiple gray scale images
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="14bfa934-5daa-a54a-476d-2d2b137782b9.htm">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(SerializationInfo, StreamingContext)</a></td><td><div class="summary">
            Constructor used to deserialize runtime serialized object
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4583d4a2-af25-2f36-73b3-19cc23d7d551.htm">_And(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Inplace And operation with <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="73f45f41-96d7-f9da-1d16-52626b93ef1f.htm">_dataHandle</a></td><td><div class="summary">
            The pinned GCHandle to _array;
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9c16fbf7-3167-023b-1911-ebc3a16d1f52.htm">_Dilate(Int32)</a></td><td><div class="summary">
            Dilates <i>this</i> image inplace using a 3x3 rectangular structuring element.
            Dilation are applied serveral (iterations) times
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b599c429-eb77-a76d-23e4-c61a8fe00376.htm">_EqualizeHist<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            The algorithm normalizes brightness and increases contrast of the image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="270a9333-fa12-b174-ba77-0b4c5b63ec15.htm">_Erode(Int32)</a></td><td><div class="summary">
            Erodes <i>this</i> image inplace using a 3x3 rectangular structuring element.
            Erosion are applied serveral (iterations) times
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0ac47668-1df4-a84a-622d-a9ef80ede57b.htm">_Flip(FLIP)</a></td><td><div class="summary"> Inplace flip the image</div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cf27546b-9ed1-a48c-44ce-7bcfd813dc3f.htm">_Max(Double)</a></td><td><div class="summary">
            Inplace compute the elementwise maximum value with <span class="parameter">val</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c75d0ac8-b447-0f6e-451c-c90edc8705eb.htm">_Max(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Inplace elementwise maximize the current Array with <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c2ef617c-ed0c-e7da-99ed-5ea5f02df07a.htm">_Min(Double)</a></td><td><div class="summary">
            Inplace compute the elementwise minimum value 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="78048ea3-e874-c261-128e-ba41a55c1031.htm">_Min(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Inplace elementwise minimize the current Array with <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="56936a6c-d730-94f9-48ff-d54525004589.htm">_MorphologyEx(StructuringElementEx, CV_MORPH_OP, Int32)</a></td><td><div class="summary">
            Perform inplace advanced morphological transformations using erosion and dilation as basic operations.
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="12f24e82-b77c-b52c-21ab-9f150ea0e7fd.htm">_Mul(Double)</a></td><td><div class="summary">
            Inplace multiply elements of the Array by <span class="parameter">scale</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3ebaa909-5cc8-a089-c641-28932cdd694a.htm">_Mul(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Inplace elementwise multiply the current Array with <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5b505d71-6be0-cafd-3129-c21bf8ef524f.htm">_Not<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> 
            Inplace compute the complement for all Array Elements
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="20428d37-a9d0-45b3-3c85-200b61948317.htm">_Or(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Inplace Or operation with <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="e741c1e4-05a5-b2ac-5159-4886cc8dcf06.htm">_ptr</a></td><td><div class="summary">
            A pointer to the unmanaged object
            </div> (Inherited from <a href="f7d6df34-2ee0-1ad2-b53f-4b95f3f7d12f.htm">UnmanagedObject</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="97625f47-04a7-3b96-d28e-361340da3ddc.htm">_SmoothGaussian(Int32)</a></td><td><div class="summary"> Perform Gaussian Smoothing inplace for the current image </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="29e8319b-761d-cdbc-78e0-3cb98bd235ee.htm">_SmoothGaussian(Int32, Int32, Double, Double)</a></td><td><div class="summary"> Perform Gaussian Smoothing inplace for the current image </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5abf2600-5e87-5732-38c7-5822b9b5d79f.htm">_ThresholdBinary(TColor, TColor)</a></td><td><div class="summary"> Threshold the image inplace such that: dst(x,y) = max_value, if src(x,y)&gt;threshold; 0, otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="da6f16fa-78d2-11f5-a22f-826a8c2cdd71.htm">_ThresholdBinaryInv(TColor, TColor)</a></td><td><div class="summary"> Threshold the image inplace such that: dst(x,y) = 0, if src(x,y)&gt;threshold;  max_value, otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5c5da504-5aa5-3cfa-fef3-83cb47d2eb0f.htm">_ThresholdToZero(TColor)</a></td><td><div class="summary"> Threshold the image inplace such that: dst(x,y) = src(x,y), if src(x,y)&gt;threshold;  0, otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="754a64ac-2beb-2228-3122-701801c9dd88.htm">_ThresholdToZeroInv(TColor)</a></td><td><div class="summary"> Threshold the image inplace such that: dst(x,y) = 0, if src(x,y)&gt;threshold;  src(x,y), otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="65e6bd09-8664-0519-42c2-8ca0b69c426f.htm">_ThresholdTrunc(TColor)</a></td><td><div class="summary"> Threshold the image inplace such that: dst(x,y) = threshold, if src(x,y)&gt;threshold; src(x,y), otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="17b44e5d-44c9-9cc5-1418-e17c0ff64e3f.htm">AbsDiff(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
            Computes absolute different between <i>this</i> image and the other image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8b0c9366-9ef6-d433-b444-5a6ecfb44bd2.htm">Acc(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Accumulate <span class="parameter">img2</span> to the current image using the specific mask
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="514bcaa5-1034-4b57-5844-57bc6cf4ceb8.htm">Acc(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Accumulate <span class="parameter">img2</span> to the current image using the specific mask
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="90e38706-4c69-26e1-2148-45d75e5e51ee.htm">Action(Action<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> perform an generic action based on each element of the Image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e27ecc01-1851-bea5-e1c6-c88937703cd6.htm">Action<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Toolbox<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Action<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            perform an generic operation based on the elements of the two images
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="86c38ddc-547b-3da3-8051-bb0f6934235b.htm">Add(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Elementwise add another image with the current image </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4194e610-83c3-e85a-4088-a9a602acc0fe.htm">Add(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Elementwise add <span class="parameter">img2</span> with the current image, using a mask</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5e6c4392-cb27-5fd1-b57f-ea7133a79116.htm">Add(TColor)</a></td><td><div class="summary"> Elementwise add a color <span class="parameter">val</span> to the current image</div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="72c31336-a29a-6a9a-f6b0-7eca3c6476fb.htm">Addition(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Elementwise add <span class="parameter">img1</span> with <span class="parameter">img2</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="48e768b0-a9b8-fd01-1015-98bdb88ea321.htm">Addition(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Elementwise add <span class="parameter">img1</span> with <span class="parameter">val</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="2cd0f38a-a59b-d7e7-8754-866a4958222d.htm">Addition(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary">
            Elementwise add <span class="parameter">img1</span> with <span class="parameter">val</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="0b5cf41e-df55-db22-0533-f048870460d8.htm">Addition(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor)</a></td><td><div class="summary">
            Elementwise add <span class="parameter">img1</span> with <span class="parameter">val</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="15d99911-57c0-57af-6a37-06a74a9bf325.htm">Addition(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Elementwise add <span class="parameter">img1</span> with <span class="parameter">val</span></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2c9a2257-da07-f55f-dc63-d8400671ea3e.htm">AddWeighted(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double, Double, Double)</a></td><td><div class="summary"> 
            Return the weighted sum such that: res = this * alpha + img2 * beta + gamma
            </div><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="d680126e-5e2e-10b2-58ee-359d04b064eb.htm">AllocateData(Int32, Int32, Int32)</a></td><td><div class="summary">
            Allocate data for the array
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="9bc52e38-009a-65dc-8d8b-c0a952372261.htm">AllocateData(Int32, Int32, Int32)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7100c6c4-231c-2263-6575-9544002a2049.htm">And(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise AND operation with another image and return the result</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0df44861-aaf2-bf12-50f0-524b6d7fd7d0.htm">And(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
            Perform an elementwise AND operation with another image, using a mask, and return the result
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7fa49eb3-afa0-62a6-5e6e-41e2c33e23e1.htm">And(TColor)</a></td><td><div class="summary"> Perform an binary AND operation with some color</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4f4b0361-b145-5cfa-3af9-f3387a5f97ba.htm">And(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an binary AND operation with some color using a mask</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="24dc084c-0935-08c9-213f-d677e7dc8e78.htm">AvgSdv(TColor<span class="languageSpecificText"><span class="cpp">%</span></span>, MCvScalar<span class="languageSpecificText"><span class="cpp">%</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Calculates the average value and standard deviation of array elements, independently for each channel
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eaaae14b-7f40-ca30-d8fb-be412421a4ea.htm">AvgSdv(TColor<span class="languageSpecificText"><span class="cpp">%</span></span>, MCvScalar<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Calculates the average value and standard deviation of array elements, independently for each channel
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="792e25d7-4ae8-52c3-eadb-c05ee7b7919f.htm">Bitmap</a></td><td><div class="summary">
            The Get property provide a more efficient way to convert Image&lt;Gray, Byte&gt;, Image&lt;Bgr, Byte&gt; and Image&lt;Bgra, Byte&gt; into Bitmap
            such that the image data is <b>shared</b> with Bitmap. 
            If you change the pixel value on the Bitmap, you change the pixel values on the Image object as well!
            For other types of image this property has the same effect as ToBitmap()
            <b>Take extra caution not to use the Bitmap after the Image object is disposed</b>
            The Set property convert the bitmap to this Image type.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="cc428531-8d61-6214-2b07-cfdef492d6bd.htm">BitmapFormats</a></td><td><div class="summary">
            File formats supported by Bitmap. Image are converted to Bitmap then perform file operations if the file type belongs to one of following format.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="f5ad1313-323f-4ec1-cb9e-97f699ff2908.htm">BitwiseAnd(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Perform an elementwise AND operation on the two images
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="aa79664c-f457-3b8d-3bde-6683f734b76d.htm">BitwiseAnd(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary">
            Perform an elementwise AND operation using an images and a color
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="2e240378-7014-a21d-74b8-2c572cc3d224.htm">BitwiseAnd(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Perform an elementwise AND operation using an images and a color
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="b502528a-cf00-8087-da91-1ab2c6ef20e1.htm">BitwiseAnd(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor)</a></td><td><div class="summary">
            Perform an elementwise AND operation using an images and a color
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="df824617-6333-8bf8-2753-3cd73bca7b3a.htm">BitwiseAnd(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Perform an elementwise AND operation using an images and a color
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="ab7cfefd-5219-6ea6-e127-df223a9dd094.htm">BitwiseOr(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise OR operation with another image and return the result</div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="d205533e-15f3-d9ed-4811-7d701935c587.htm">BitwiseOr(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary"> 
             Perform an binary OR operation with some color
             </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="629a4884-510f-e9e8-ce7e-ded8186bdf9a.htm">BitwiseOr(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
             Perform an binary OR operation with some color
             </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="8f07f836-289d-5b94-cb94-58bfb4c72080.htm">BitwiseOr(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor)</a></td><td><div class="summary"> 
             Perform an binary OR operation with some color
             </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="908f1ba0-ba14-d8dc-6e65-5923f7d515ae.htm">BitwiseOr(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
             Perform an binary OR operation with some color
             </div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="24efb2ef-4b77-68e5-c8cf-1395430b3666.htm">Bytes</a></td><td><div class="summary">
            Get or Set an Array of bytes that represent the data in this array
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ba736ea5-ba99-bcd4-6152-216a82e35066.htm">Canny(TColor, TColor)</a></td><td><div class="summary"> Find the edges on this image and marked them in the returned image.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1e9ee198-2f1c-ae2c-8eb2-4df90fee6a78.htm">Clone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Make a clone of the current image. All image data as well as the COI and ROI are cloned
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="85e3d711-f6cf-7be5-f4e1-4756ba624e22.htm">Cmp(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, CMP_TYPE)</a></td><td><div class="summary">
            This function compare the current image with <span class="parameter">img2</span> and returns the comparison mask
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="16721eb6-40ae-c7d1-ac88-7359fe12300a.htm">Cmp(Double, CMP_TYPE)</a></td><td><div class="summary">
            This function compare the current image with <span class="parameter">value</span> and returns the comparison mask
            </div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="95edd8c4-ce5c-b4f2-08db-3044b2f41b92.htm">Cols</a></td><td><div class="summary">
            The number of cols for this array
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fa3e5f51-bb0e-223e-7c6e-febbba23bb12.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TOtherColor, TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> Convert the current image to the specific color and depth </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3bb43969-3269-779e-8291-3bc748cbd2c4.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Toolbox<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Func<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, Int32, Int32, TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the element of a new image based on the value as well as the x and y positions of each pixel on the image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8a55e5c9-6214-9a9f-8582-7f3196c2e8a9.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Converter<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the element of the new image based on element of this image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="12c68eb1-33f1-fafa-1c5d-d3a0fcf44901.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth2, TDepth3<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Toolbox<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Func<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, TDepth2, TDepth3<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the element of the new image based on the elements of the two image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="88085821-dadc-966d-0900-4af5b761d5bf.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth2, TDepth3, TDepth4<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth3<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Toolbox<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Func<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, TDepth2, TDepth3, TDepth4<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the element of the new image based on the elements of the three image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="577e764d-1dc2-1d6b-00e9-9be95455ccd1.htm">Convert<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth2, TDepth3, TDepth4, TDepth5<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth3<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth4<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Toolbox<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Func<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth, TDepth2, TDepth3, TDepth4, TDepth5<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the element of the new image based on the elements of the four image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c371f954-3d08-9266-c3e8-bac206e82748.htm">ConvertFrom<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TSrcColor, TSrcDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TSrcColor, TSrcDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Convert the source image to the current image, if the size are different, the current image will be a resized version of the srcImage. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="36a927b3-1a52-50c7-a3f5-c1e5c98fca0e.htm">ConvertScale<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TOtherDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(Double, Double)</a></td><td><div class="summary"> Convert the current image to the specific depth, at the same time scale and shift the values of the pixel</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fd4fcbaf-a25f-66cf-7b78-2bd5809f5c39.htm">Convolution(ConvolutionKernelF)</a></td><td><div class="summary"> 
            performs a convolution using the provided kernel 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a9b5bb96-c65e-93d5-330a-13ad618563e6.htm">Copy(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Copy the masked area of this image to destination
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8dcb4dc4-7d6c-edc5-c1da-ad2250b7f610.htm">Copy(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
             Make a copy of the image using a mask, if ROI is set, only copy the ROI 
             </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2528290c-8802-d51b-116b-79f0bc9acba6.htm">Copy(Rectangle)</a></td><td><div class="summary">
            Make a copy of the specific ROI (Region of Interest)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="63067230-ffd3-e691-54b1-f42e1fa73f57.htm">Copy<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> Make a copy of the image, if ROI is set, only copy the ROI</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0a958c8e-c012-a07f-2089-54bbadc7cbe2.htm">CopyBlank<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> 
            Create an image of the same size
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c4facc43-cefc-9617-a4c4-db4aa3d1bfbf.htm">CopyTo(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
             Copy the current array to <span class="parameter">dest</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="78abf622-70c1-9415-f7c5-27469fddf4a4.htm">CountNonzero<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Count the non Zero elements for each channel
            </div><br /></td></tr><tr data="property; public; static; declared"><td><img src="../icons/pubproperty.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="27df524a-9f01-d446-8985-2d10b1971717.htm">CvDepth</a></td><td><div class="summary">
            Get the equivalent opencv depth type for this image
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="8eaaf685-939e-9365-2bd9-22ef02c39b20.htm">Data</a></td><td><div class="summary">
            Get or Set the data for this matrix
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="5282df63-dc57-5bad-2562-637bb26b3258.htm">DeserializeObjectData(SerializationInfo, StreamingContext)</a></td><td><div class="summary">
            A function used for runtime deserailization of the object
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="43950597-8c15-dcf0-e13f-64c7756aca5f.htm">DetectHaarCascade(HaarCascade)</a></td><td><div class="summary">
            Detect HaarCascade object in the current image, using predifined parameters
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="11c784fc-7d30-a921-07ec-ecdb7d217bbe.htm">DetectHaarCascade(HaarCascade, Double, Int32, HAAR_DETECTION_TYPE, Size)</a></td><td><div class="summary">
            Finds rectangular regions in the given image that are likely to contain objects the cascade has been trained for and returns those regions as a sequence of rectangles. The function scans the image several times at different scales (see cvSetImagesForHaarClassifierCascade). Each time it considers overlapping regions in the image and applies the classifiers to the regions using cvRunHaarClassifierCascade. It may also apply some heuristics to reduce number of analyzed regions, such as Canny prunning. After it has proceeded and collected the candidate rectangles (regions that passed the classifier cascade), it groups them and returns a sequence of average rectangles for each large enough group. The default parameters (scale_factor=1.1, min_neighbors=3, flags=0) are tuned for accurate yet slow object detection. For a faster operation on real video images the settings are: scale_factor=1.2, min_neighbors=2, flags=CV_HAAR_DO_CANNY_PRUNING, min_size=&lt;minimum possible face size&gt; (for example, ~1/4 to 1/16 of the image area in case of video conferencing). 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="28088b77-7d94-d1a7-9793-8dcec6b70ac5.htm">Dilate(Int32)</a></td><td><div class="summary">
            Dilates <i>this</i> image using a 3x3 rectangular structuring element.
            Dilation are applied serveral (iterations) times
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a3fc8f4c-5172-d440-1e10-093bc946806a.htm">Dispose<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            The dispose function that implements IDisposable interface
            </div> (Inherited from <a href="1a248c0b-75ce-eae1-d650-521f24d4d308.htm">DisposableObject</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="dc3b1d70-509d-7234-9d45-f2c6a86cb903.htm">Dispose(Boolean)</a></td><td><div class="summary"> 
             Release the all the memory associate with this object
            </div> (Inherited from <a href="1a248c0b-75ce-eae1-d650-521f24d4d308.htm">DisposableObject</a>.)<br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="69a6b270-7152-ac97-8bd5-7d9cbf9fa73f.htm">DisposeObject<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Release all unmanaged memory associate with the image
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="e6e4a542-18b3-c153-cfab-5a9b70cba3d0.htm">DisposeObject<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="e9956c1b-fafa-45cb-5e41-134cceb5e0a2.htm">Division(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary">
        <span class="parameter">img1</span> / <span class="parameter">scale</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="b72a11a3-f5ff-ede1-1dba-51b879f7e0e0.htm">Division(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
        <span class="parameter">scale</span> / <span class="parameter">img1</span></div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3ab48ac2-9969-2f83-1a9d-bfd47de0b6a0.htm">DotProduct(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Calculates and returns the Euclidean dot product of two arrays.
            src1 dot src2 = sumI(src1(I)*src2(I))
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3118f0b2-af80-67c5-be13-6b67692e2d65.htm">Draw<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(MCvBox2D, TColor, Int32)</a></td><td><div class="summary"> Draw a box of the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5d2d604e-29bc-04f6-2558-0676c211b1c4.htm">Draw(Rectangle, TColor, Int32)</a></td><td><div class="summary"> Draw an Rectangle of the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1fdff0a5-4caa-d513-9201-0ebc66367557.htm">Draw(Cross2DF, TColor, Int32)</a></td><td><div class="summary"> Draw a 2D Cross using the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d621179c-5398-5c3c-179f-d6a9afa75fc9.htm">Draw(LineSegment2DF, TColor, Int32)</a></td><td><div class="summary"> Draw a line segment using the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4e959406-2c71-1243-1afc-969e38e3a48e.htm">Draw(LineSegment2D, TColor, Int32)</a></td><td><div class="summary"> Draw a line segment using the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4e05ec9d-9227-bc84-d2ce-4a8a3859cac0.htm">Draw(IConvexPolygonF, TColor, Int32)</a></td><td><div class="summary"> Draw a convex polygon using the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6d93c75c-d034-b484-d879-ff0dc0df9b43.htm">Draw(CircleF, TColor, Int32)</a></td><td><div class="summary"> Draw a Circle of the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c677f8be-f270-3ccf-fc65-dea1a101bb4d.htm">Draw(Ellipse, TColor, Int32)</a></td><td><div class="summary"> Draw a Ellipse of the specific color and thickness </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c82d8195-3d41-e5a2-ca75-502416ef9358.htm">Draw(String, MCvFont<span class="languageSpecificText"><span class="cpp">%</span></span>, Point, TColor)</a></td><td><div class="summary">
            Draw the text using the specific font on the image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="49c086a1-c6e9-5947-a384-d2bcc78b9219.htm">Draw(Seq<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Point<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor, Int32)</a></td><td><div class="summary">
            Draws contour outlines in the image if thickness&gt;=0 or fills area bounded by the contours if thickness&lt;0
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3d8f7658-708d-165b-eb36-f021e61dadcc.htm">Draw(Seq<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Point<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor, TColor, Int32, Int32)</a></td><td><div class="summary">
            Draws contour outlines in the image if thickness&gt;=0 or fills area bounded by the contours if thickness&lt;0
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3fb7fff7-83c5-1d3e-6410-4a5b4eb17136.htm">Draw(Seq<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Point<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor, TColor, Int32, Int32, Point)</a></td><td><div class="summary">
            Draws contour outlines in the image if thickness&gt;=0 or fills area bounded by the contours if thickness&lt;0
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a2d1948d-43b7-6334-5df3-53e38b0e841c.htm">DrawPolyline<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Boolean, TColor, Int32)</a></td><td><div class="summary">
            Draw the polyline defined by the array of 2D points
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="88a2e4dc-aa19-991d-ceb4-8077ca75b123.htm">DrawPolyline(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Boolean, TColor, Int32)</a></td><td><div class="summary">
            Draw the polyline defined by the array of 2D points
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="09861ac3-fc9c-bc9c-0c49-a1f63d7b5c30.htm">DrawPolyline(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Boolean, TColor, Int32)</a></td><td><div class="summary">
            Draw the polylines defined by the array of array of 2D points
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cb458162-4427-757f-c468-7e759bc7f916.htm">Equals(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Compare two images, returns true if the each of the pixels are equal, false otherwise
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="571a4b86-a916-8ce9-72f0-24e6f8bd3cce.htm">EqualSize<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>D2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>D2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Determine if the size (width and height) of <i>this</i> Array
            equals the size of <span class="parameter">src2</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9d6ac86b-0c0f-97f1-79a6-4eb7dc0a0d6d.htm">Erode(Int32)</a></td><td><div class="summary">
            Erodes <i>this</i> image using a 3x3 rectangular structuring element.
            Erosion are applied serveral (iterations) times
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="12aeb667-6db7-e805-9b43-e0f9fdb57f76.htm">Exp<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            calculates exponent of every element of input array:
            dst(I)=exp(src(I))
            Maximum relative error is ~7e-6. Currently, the function converts denormalized values to zeros on output.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0a5e471f-e641-188b-bace-50adc9b0efd8.htm">ExtractSURF(MCvSURFParams<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Finds robust features in the image (basic descriptor is returned in this case). For each feature it returns its location, size, orientation and optionally the descriptor, basic or extended. The function can be used for object tracking and localization, image stitching etc
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="432aacaa-8476-c7ac-24b2-0ac2adddf505.htm">ExtractSURF(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, MCvSURFParams<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Finds robust features in the image (basic descriptor is returned in this case). For each feature it returns its location, size, orientation and optionally the descriptor, basic or extended. The function can be used for object tracking and localization, image stitching etc
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d5fb1e04-82c1-4224-d05d-4935076c1fe6.htm">FillConvexPoly(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, TColor)</a></td><td><div class="summary">
            Fill the convex polygon with the specific color
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="312969f4-879c-adf8-cbb1-85fb5af67cc6.htm">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Destructor
            </div> (Inherited from <a href="1a248c0b-75ce-eae1-d650-521f24d4d308.htm">DisposableObject</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d2610a47-f30d-0c53-fd87-5c547cc79ba3.htm">FindContours<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Find a list of contours using simple approximation method.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4952a9dc-09bf-d381-9921-c3f328b25875.htm">FindContours(CHAIN_APPROX_METHOD, RETR_TYPE)</a></td><td><div class="summary">
            Find contours 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="028cb9c4-eb4b-aa5d-242e-273ac7e227e2.htm">FindContours(CHAIN_APPROX_METHOD, RETR_TYPE, MemStorage)</a></td><td><div class="summary">
            Find contours using the specific memory storage
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="46410dfc-7ef2-64bb-fb5f-7659b4732ff9.htm">FindCornerSubPix(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>PointF<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Size, Size, MCvTermCriteria)</a></td><td><div class="summary">
            Iterates to find the sub-pixel accurate location of corners, or radial saddle points
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="304d1f22-93fd-d920-1f4a-285c14594050.htm">Flip(FLIP)</a></td><td><div class="summary"> Return a filpped copy of the current image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="34b725df-91e9-994c-b0ad-0bc3c2fd9ee3.htm">GetAverage<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the average value on this image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c04e9878-2f10-729e-47a5-823066c02b2f.htm">GetAverage(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Get the average value on this image, using the specific mask
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="faaba8ae-e16f-c37b-a95a-0e205c13e8e0.htm">GetMoments(Boolean)</a></td><td><div class="summary">
            Calculates spatial and central moments up to the third order and writes them to moments. The moments may be used then to calculate gravity center of the shape, its area, main axises and various shape characeteristics including 7 Hu invariants.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="53bb39d5-74dd-454d-c324-8f0da49c4c67.htm">GetObjectData(SerializationInfo, StreamingContext)</a></td><td><div class="summary">
            A function used for runtime serilization of the object
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="db20a654-224b-a72d-f9ab-1d0fe8782836.htm">GetObjectData(SerializationInfo, StreamingContext)</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ed5d2076-0454-dfbb-734c-075bbc37bf84.htm">GetSchema<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the xml schema
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="64ebd2a6-8952-ee6f-368a-964d29b58b09.htm">GetSubRect(Rectangle)</a></td><td><div class="summary">
            Get a subimage which image data is shared with the current image.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d62a6795-c2f4-8286-8bc6-b06bbaf2524a.htm">GetSum<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Get the sum for each color channel </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e7f41ddd-366c-bf17-a642-e057cd3926e9.htm">GoodFeaturesToTrack(Int32, Double, Double, Int32)</a></td><td><div class="summary">
            Finds corners with big eigenvalues in the image. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8befa5a0-8fac-5094-a11b-f89ef9c980f5.htm">GoodFeaturesToTrack(Int32, Double, Double, Int32, Double)</a></td><td><div class="summary">
            Finds corners with big eigenvalues in the image. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cdde4b05-cf11-3675-a1e1-07cca2162d29.htm">GoodFeaturesToTrack(Int32, Double, Double, Int32, Boolean, Double)</a></td><td><div class="summary">
            Finds corners with big eigenvalues in the image. 
            </div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="8bd9c96d-e08c-0107-980b-77d93b3c2be8.htm">Height</a></td><td><div class="summary"> 
            Get the height (#Rows) of the cvArray.
            If ROI is set, the height of the ROI 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6f78c3d8-fb1a-5983-2862-549c49019d49.htm">HoughCircles(TColor, TColor, Double, Double, Int32, Int32)</a></td><td><div class="summary"> 
            First apply Canny Edge Detector on the current image, 
            then apply Hough transform to find circles 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ae2ce48e-d3eb-f561-1b57-68186dfd9902.htm">HoughLines(TColor, TColor, Double, Double, Int32, Double, Double)</a></td><td><div class="summary"> 
            First apply Canny Edge Detector on the current image, 
            then apply Hough transform to find line segments 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8cafb14d-e65f-aff1-892f-25376a208bdb.htm">HoughLinesBinary(Double, Double, Int32, Double, Double)</a></td><td><div class="summary"> 
            Apply Hough transform to find line segments. 
            The current image must be a binary image (eg. the edges as a result of the Canny edge detector) 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fa60bacc-87b4-857b-3bea-10bf1d10b15f.htm">InPaint(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary"> Use impaint to recover the intensity of the pixels which location defined by <span class="parameter"></span> on <i>this</i> image </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="07eff70b-f81f-6313-98a9-02d508f7c7e0.htm">InRange(TColor, TColor)</a></td><td><div class="summary">Checks that image elements lie between two scalars</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1ea77168-38b4-d559-40a2-5baca8f95a3a.htm">Integral(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Calculates integral images for the source image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fd58f486-1968-28aa-67bd-f1f4c7bb4a4b.htm">Integral(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Calculates integral images for the source image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0df4b59d-cf1e-3186-7feb-630650e5724d.htm">Integral(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            calculates one or more integral images for the source image
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="06a6d393-fa9a-9981-b758-d872b3c52d6a.htm">IsROISet</a></td><td><div class="summary"> 
            Indicates if the region of interest has been set
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="16f694d9-11de-d615-5d4b-706ccbb2d1de.htm">Item<span class="languageSpecificText"><span class="cs">[</span><span class="vb">(</span><span class="cpp">[</span><span class="nu">(</span></span>Int32<span class="languageSpecificText"><span class="cs">]</span><span class="vb">)</span><span class="cpp">]</span><span class="nu">)</span></span></a></td><td><div class="summary">
            Get or Set the specific channel of the current image. 
            For Get operation, a copy of the specific channel is returned.
            For Set operation, the specific channel is copied to this image.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="c12cad42-5807-bf36-f774-a5574da70ecd.htm">Item<span class="languageSpecificText"><span class="cs">[</span><span class="vb">(</span><span class="cpp">[</span><span class="nu">(</span></span>Int32, Int32<span class="languageSpecificText"><span class="cs">]</span><span class="vb">)</span><span class="cpp">]</span><span class="nu">)</span></span></a></td><td><div class="summary">
            Get or Set the color in the <span class="parameter">row</span>th row (y direction) and <span class="parameter">column</span>th column (x direction)
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="9f40bae6-bda8-0101-2bf7-28f770b3ed41.htm">Item<span class="languageSpecificText"><span class="cs">[</span><span class="vb">(</span><span class="cpp">[</span><span class="nu">(</span></span>Point<span class="languageSpecificText"><span class="cs">]</span><span class="vb">)</span><span class="cpp">]</span><span class="nu">)</span></span></a></td><td><div class="summary">
            Get or Set the color in the <span class="parameter">location</span></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f84e3cc0-0624-36a0-7281-cd2d08bec4bc.htm">Laplace(Int32)</a></td><td><div class="summary">
             Calculates Laplacian of the source image by summing second x- and y- derivatives calculated using Sobel operator.
             Specifying aperture_size=1 gives the fastest variant that is equal to convolving the image with the following kernel:
            
             |0  1  0|
             |1 -4  1|
             |0  1  0|
             </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5e6c390a-f0d7-e9f9-628d-1eee614125e1.htm">Log<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Calculates natural logarithm of absolute value of every element of input array
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2c5fccfe-0e73-6a2b-7438-8d6d83c9a13d.htm">LogPolar(PointF, Double, Int32)</a></td><td><div class="summary">
             Convert the image to log polar, simulating the human foveal vision
             </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="177a734b-4705-129f-2aa9-f81702fc8c07.htm">ManagedArray</a></td><td><div class="summary">
            Get the underneath managed array
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="291a647d-c786-27a9-b298-a5dd53d4cfd9.htm">ManagedArray</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e825d2a7-91fa-75eb-0eb4-3245d70227ee.htm">MatchTemplate(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TM_TYPE)</a></td><td><div class="summary">
            The function slids through image, compares overlapped patches of size wxh with templ using the specified method and return the comparison results 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ff80cea3-883b-3608-e4b8-0bc90bfe37e9.htm">Max(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Find the elementwise maximum value </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a591d441-26b9-71a9-e106-c5e728cada37.htm">Max(Double)</a></td><td><div class="summary"> Find the elementwise maximum value </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b4e10fb0-2600-dfd2-af73-132f1947c75a.htm">Min(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Find the elementwise minimum value </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d741a772-6af7-2425-3e90-1217a2be46b0.htm">Min(Double)</a></td><td><div class="summary"> Find the elementwise minimum value </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0ae0c301-166f-2b70-7783-1891e625f78a.htm">MinMax(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Returns the min / max location and values for the image
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="75831c61-71a6-f535-c969-2c9fdb4bac56.htm">MIplImage</a></td><td><div class="summary">
            The IplImage structure
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a3662c6d-2eea-55ca-0207-e0b96ec4a6e1.htm">MorphologyEx(StructuringElementEx, CV_MORPH_OP, Int32)</a></td><td><div class="summary">
            Perform advanced morphological transformations using erosion and dilation as basic operations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="01b9ba23-0058-3167-16ee-206a4befd7f3.htm">Mul(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary"> Elementwise multiply another image with the current image and the <span class="parameter">scale</span></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="66616b23-1771-8bb6-cb9a-a42e6b8b4e3f.htm">Mul(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Elementwise multiply <span class="parameter">img2</span> with the current image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2c9398fa-6906-974d-2b7b-b9402051950c.htm">Mul(Double)</a></td><td><div class="summary"> Elementwise multiply the current image with <span class="parameter">scale</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="979cf757-f370-6c19-89d8-e17c1d26a178.htm">Multiply(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary">
        <span class="parameter">img1</span> * <span class="parameter">scale</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="7fbbe83b-95e9-f3d5-f726-a88252c250f0.htm">Multiply(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
        <span class="parameter">scale</span>*<span class="parameter">img1</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="dca14353-c6da-e170-78e4-34083e4c90e2.htm">Multiply(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, ConvolutionKernelF)</a></td><td><div class="summary">
            Perform the convolution with <span class="parameter">kernel</span> on <span class="parameter">img1</span></div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="7ed8b401-d535-64e6-b621-e7a8746a471d.htm">Norm</a></td><td><div class="summary"> 
            The norm of this Array 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c77fb3aa-7c2c-c30e-3ef7-41e43cb35c81.htm">Not<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> 
            Compute the complement image
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="8d273e6c-c59d-9dc4-1893-048fa00433d1.htm">NumberOfChannels</a></td><td><div class="summary">
            Get the number of channels for this image
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="900c6180-0f6c-8ee0-ccda-2b64a1977a7e.htm">NumberOfChannels</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="7b6dff62-7a1c-0021-199a-b7dd9a1e9ad8.htm">OnesComplement(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Compute the complement image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e02e38cc-5acc-3e42-6400-537307358b0b.htm">Or(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise OR operation with another image and return the result</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1175dcfe-e42d-a6c6-96a5-4a1bff0adb76.htm">Or(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise OR operation with another image, using a mask, and return the result</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0316838b-78c9-a83b-cb32-c3b99f8a8439.htm">Or(TColor)</a></td><td><div class="summary"> Perform an elementwise OR operation with some color</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="46f15442-eea8-4185-2066-239d3df784be.htm">Or(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise OR operation with some color using a mask</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2065ac2c-95f1-33cc-1704-8866273318a5.htm">Pow(Double)</a></td><td><div class="summary">
            Raises every element of input array to p
            dst(I)=src(I)^p, if p is integer
            dst(I)=abs(src(I))^p, otherwise
            </div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="da3313eb-329b-a859-cd1e-4d133f0b02d4.htm">Ptr</a></td><td><div class="summary"> The pointer to the internal structure </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2aaf7083-20e0-2de3-fc78-c361e4c6a211.htm">PyrDown<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
             Performs downsampling step of Gaussian pyramid decomposition. 
             First it convolves <i>this</i> image with the specified filter and then downsamples the image 
             by rejecting even rows and columns.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="54e08a6f-3842-543b-125f-ae3d52392fe0.htm">PyrUp<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
             Performs up-sampling step of Gaussian pyramid decomposition. 
             First it upsamples <i>this</i> image by injecting even zero rows and columns and then convolves 
             result with the specified filter multiplied by 4 for interpolation. 
             So the resulting image is four times larger than the source image.
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3667827a-6308-b63b-feab-62f2eecb71bd.htm">ReadXml(XmlReader)</a></td><td><div class="summary">
            Function to call when deserializing this object from XML
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cc943c01-b6c3-1583-98b9-cca7aedf9b55.htm">Reduce<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>(CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth2<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, REDUCE_TYPE)</a></td><td><div class="summary">
            Reduces matrix to a vector by treating the matrix rows/columns as a set of 1D vectors and performing the specified operation on the vectors until a single row/column is obtained. 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d020fc0a-8aa7-04ed-5a64-2f18bb2e5944.htm">Resize(Int32, Int32)</a></td><td><div class="summary">
            Scale the image to the specific size 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9cf1c096-e345-f997-657c-f63c82f242e2.htm">Resize(Int32, Int32, Boolean)</a></td><td><div class="summary">
            Scale the image to the specific size
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fc935450-8263-a8c2-aced-8c07671a2559.htm">Resize(Double)</a></td><td><div class="summary">
            Scale the image to the specific size: width *= scale; height *= scale  
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="be373a84-4ee0-f181-665e-ba1d6d7e3e18.htm">ROI</a></td><td><div class="summary"> 
             Get or Set the region of interest for this image. To clear the ROI, set it to System.Drawing.Rectangle.Empty
            </div><br /></td></tr><tr data="method; protected; static; declared"><td><img src="../icons/protmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="9eb53f97-0591-7429-5a3b-8e359509e868.htm">RoiParam(IntPtr, Int64<span class="languageSpecificText"><span class="cpp">%</span></span>, Int32<span class="languageSpecificText"><span class="cpp">%</span></span>, Int32<span class="languageSpecificText"><span class="cpp">%</span></span>, Int32<span class="languageSpecificText"><span class="cpp">%</span></span>, Int32<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">
            Return parameters based on ROI
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cdcf1f0e-aae2-4d0c-99de-bd4850f12f3f.htm">Rotate(Double, TColor)</a></td><td><div class="summary">
            Rotate the image the specified angle cropping the result to the original size
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ae9c1603-5135-1a2f-bd46-1dd736d4d7a8.htm">Rotate(Double, TColor, Boolean)</a></td><td><div class="summary">
            Rotate this image the specified <span class="parameter">angle</span></div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="8c1a8a45-e2f7-713d-cbbb-f67e11eb31a5.htm">Rows</a></td><td><div class="summary">
            The number of rows for this array
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3852a66e-0ecd-df5b-d902-153a3232150c.htm">RunningAvg(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary"> 
             Update Running Average. <i>this</i> = (1-alpha)*<i>this</i> + alpha*img
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="04d8daed-f6ea-dd4a-e57a-df752f6e1930.htm">RunningAvg(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> 
             Update Running Average. <i>this</i> = (1-alpha)*<i>this</i> + alpha*img, using the mask
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4dbd1e85-ff0b-29e6-3d06-04efd7be3d94.htm">Sample(LineSegment2D)</a></td><td><div class="summary"> Sample the pixel values on the specific line segment </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eaaf9cad-1fbc-73bb-b190-d216c4edf6f4.htm">Sample(LineSegment2D, CONNECTIVITY)</a></td><td><div class="summary">
            Sample the pixel values on the specific line segment
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="01adb181-753d-0b14-f867-fee707f20b75.htm">Save(String)</a></td><td><div class="summary">
            Save this image to the specific file
            </div> (Overrides <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>.<a href="150c1571-0b30-527d-3e1b-af163589f596.htm">Save(String)</a>.)<br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="3cd9b6ea-b6ca-c9ae-77fb-f5d0e75bebab.htm">SerializationCompressionRatio</a></td><td><div class="summary">
            Get or set the Compression Ratio for serialization. A number between 0 - 9. 
            0 means no compression at all, while 9 means best compression
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="75d3cc52-b037-e126-ca8c-491dd233c860.htm">SetIdentity(MCvScalar)</a></td><td><div class="summary">
            Initializs scaled identity matrix
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="de45e9f1-9add-79a5-9bbb-be42b953961a.htm">SetIdentity<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Initialize the identity matrix
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ceea16dd-36fa-bf1c-f6b3-892eb93ab7ac.htm">SetRandNormal(UInt64, MCvScalar, MCvScalar)</a></td><td><div class="summary">
            Inplace fills Array with normally distributed random numbers
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="af09d20f-6e72-ed1a-bcfc-3cee082865a8.htm">SetRandNormal(MCvScalar, MCvScalar)</a></td><td><div class="summary">
            Inplace fills Array with normally distributed random numbers
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1553e56f-38ec-e205-3490-87a45a49d1d9.htm">SetRandUniform(UInt64, MCvScalar, MCvScalar)</a></td><td><div class="summary">
            Inplace fills Array with uniformly distributed random numbers
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f25aac2a-20c4-53f5-4a42-e91cf50c779d.htm">SetRandUniform(MCvScalar, MCvScalar)</a></td><td><div class="summary">
            Inplace fills Array with uniformly distributed random numbers
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2f974317-301a-3b28-a523-7e9ade9fdf10.htm">SetValue(TColor)</a></td><td><div class="summary">
            Set every pixel of the image to the specific color 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6521c5fd-facb-bf42-f733-7ef6dacf5289.htm">SetValue(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Set every pixel of the image to the specific color, using a mask
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ff637eff-284b-82e7-651b-954263f3aae7.htm">SetValue(MCvScalar)</a></td><td><div class="summary"> 
            Set the element of the Array to <span class="parameter">val</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7cd55b56-cfd4-dbe6-5699-9baa5420c16d.htm">SetValue(Double)</a></td><td><div class="summary"> 
            Set the element of the Array to <span class="parameter">val</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a8aceed4-2737-3a70-9d52-ed0b27bf75bd.htm">SetValue(MCvScalar, CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Set the element of the Array to <span class="parameter">val</span>, using the specific <span class="parameter">mask</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="04ae830e-1b86-b790-c89d-3452de84bedb.htm">SetValue(Double, CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Set the element of the Array to <span class="parameter">val</span>, using the specific <span class="parameter">mask</span></div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a5534285-bd68-5687-299d-b2b1fbf9b83e.htm">SetZero<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Set the values to zero
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="c8b1e48d-9787-acb6-a10d-c357e841192a.htm">Size</a></td><td><div class="summary"> 
             Get the size of the array
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6036f60c-9fa6-0f67-7e4d-80e0329232b8.htm">SmoothBilatral(Int32, Int32)</a></td><td><div class="summary">
            Applying bilateral 3x3 filtering
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4d3d4a90-feb3-ff76-0471-7ae2d3917e7c.htm">SmoothBlur(Int32, Int32)</a></td><td><div class="summary">
            Summation over a pixel param1 x param2 neighborhood with subsequent scaling by 1/(param1 x param2)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b4400e89-3595-673a-c3a1-e654e74e5111.htm">SmoothBlur(Int32, Int32, Boolean)</a></td><td><div class="summary">
            Summation over a pixel param1 x param2 neighborhood. If scale is true, the result is subsequent scaled by 1/(param1 x param2)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c4f7ee0d-6c71-2fa9-167f-2d832967b0c5.htm">SmoothGaussian(Int32)</a></td><td><div class="summary"> Perform Gaussian Smoothing in the current image and return the result </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="15f22443-ef80-1e33-4f68-a1dd9fc1f370.htm">SmoothGaussian(Int32, Int32, Double, Double)</a></td><td><div class="summary"> Perform Gaussian Smoothing in the current image and return the result </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c1760a7d-a3c8-ccb0-0884-e4e10bf9e71f.htm">SmoothMedian(Int32)</a></td><td><div class="summary">
            Finding median of <span class="parameter">size</span>x<span class="parameter">size</span> neighborhood 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6000a4d2-9211-0a4e-fc47-f6691cc2019f.htm">Snake(Seq<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Point<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Single, Single, Single, Size, MCvTermCriteria, MemStorage)</a></td><td><div class="summary">
            Updates snake in order to minimize its total energy that is a sum of internal energy that depends on contour shape (the smoother contour is, the smaller internal energy is) and external energy that depends on the energy field and reaches minimum at the local energy extremums that correspond to the image edges in case of image gradient.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0052d779-395d-d6b5-0df8-e1a1b9375a2a.htm">Snake(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Point<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Single, Single, Single, Size, MCvTermCriteria, Boolean)</a></td><td><div class="summary">
            Updates snake in order to minimize its total energy that is a sum of internal energy that depends on contour shape (the smoother contour is, the smaller internal energy is) and external energy that depends on the energy field and reaches minimum at the local energy extremums that correspond to the image edges in case of image gradient.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6a5bee61-41d2-a4a7-2c32-c489b78b90d9.htm">Sobel(Int32, Int32, Int32)</a></td><td><div class="summary">
            Calculates the image derivative by convolving the image with the appropriate kernel
            The Sobel operators combine Gaussian smoothing and differentiation so the result is more or less robust to the noise. Most often, the function is called with (xorder=1, yorder=0, aperture_size=3) or (xorder=0, yorder=1, aperture_size=3) to calculate first x- or y- image derivative.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7b35099c-b411-06b1-561a-d8bedd33b4a7.htm">Split<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> 
            Split current Image into an array of gray scale images where each element 
            in the array represent a single color channel of the original image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="24e9d80d-590e-1532-c3f7-7fbf7a035df5.htm">Sub(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Elementwise subtract another image from the current image </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="373d6261-304e-31e3-5e19-2c6fbefdec75.htm">Sub(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Elementwise subtrace another image from the current image, using a mask</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fb37c973-4f29-3836-a6c5-2bd9dd6f948c.htm">Sub(TColor)</a></td><td><div class="summary"> Elementwise subtrace a color from the current image</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a0e82637-1aaa-0b16-671a-b4fbd23033a9.htm">SubR(TColor)</a></td><td><div class="summary">
            result = val - this
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6334d24f-199a-01c4-e20a-aa7e0b652a8f.htm">SubR(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            result = val - this, using a mask
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="ff7b8688-6866-b4d0-a95d-09b6ddc3da55.htm">Subtraction(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Elementwise subtract another image from the current image
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="a32fabc4-6dbb-7c78-04e5-a963ca11ee31.htm">Subtraction(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, TColor)</a></td><td><div class="summary">
            Elementwise subtract another image from the current image
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="3d20d1ca-ac49-f30f-6c60-f9f86813e601.htm">Subtraction(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Elementwise subtract another image from the current image
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="85ecb4ff-8113-43e1-b6ce-13dc46ee7408.htm">Subtraction(Double, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
         - <span class="parameter">img1</span></div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="2b806edf-a347-696f-aa3c-f1b4d2838724.htm">Subtraction(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Double)</a></td><td><div class="summary">
            Elementwise subtract another image from the current image
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="046038a6-4e0e-ba4c-d01f-eb3fc1c29383.htm">ThresholdBinary(TColor, TColor)</a></td><td><div class="summary"> 
            Threshold the image such that: dst(x,y) = max_value, if src(x,y)&gt;threshold; 0, otherwise 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e5a6b7d0-ce49-66a1-99f8-1a4b83e80546.htm">ThresholdBinaryInv(TColor, TColor)</a></td><td><div class="summary"> Threshold the image such that: dst(x,y) = 0, if src(x,y)&gt;threshold;  max_value, otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b90d93c6-a20d-5fb1-69d6-fded727e6313.htm">ThresholdToZero(TColor)</a></td><td><div class="summary"> Threshold the image such that: dst(x,y) = src(x,y), if src(x,y)&gt;threshold;  0, otherwise </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="407d9aa4-fc51-b782-c807-6a9a71fe87c6.htm">ThresholdToZeroInv(TColor)</a></td><td><div class="summary"> 
            Threshold the image such that: dst(x,y) = 0, if src(x,y)&gt;threshold;  src(x,y), otherwise 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4d82cae4-dbf5-ac79-0b36-6b4e3b332f95.htm">ThresholdTrunc(TColor)</a></td><td><div class="summary">
            Threshold the image such that: dst(x,y) = threshold, if src(x,y)&gt;threshold; src(x,y), otherwise 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="058c70e1-9b5c-5e54-0e43-63a761ede9f7.htm">ToBitmap<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary"> 
            Convert this image into Bitmap, the pixel values are copied over to the Bitmap
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ed72be83-9878-8c57-ef3b-131e156e80d4.htm">ToBitmap(Int32, Int32)</a></td><td><div class="summary"> Create a Bitmap image of certain size</div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="03a3defa-2503-c0e0-bed2-275321635aa6.htm">Trace</a></td><td><div class="summary">
            Sum of diagonal elements of the matrix 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="03a513c2-8382-3886-f1d1-3efcf1269a75.htm">WarpAffine(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Single<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="053deb53-48d7-e99b-5449-967a8ec191dd.htm">WarpAffine(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cd0822ff-995f-b182-ea92-26602132c8ff.htm">WarpAffine(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Single<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Int32, Int32, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bf8b1b7f-ef02-46ae-40d9-28bda6f3dca3.htm">WarpAffine(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Double<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Int32, Int32, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="658c5511-a5f9-6180-3271-637ab5c8022a.htm">WarpPerspective(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Single<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ac0a577b-454c-55e3-a2da-3c8f5a7999af.htm">WarpPerspective(Matrix<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Single<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Int32, Int32, INTER, WARP, TColor)</a></td><td><div class="summary">
            Transforms source image using the specified matrix
            </div><br /></td></tr><tr data="property; public; instance; inherited"><td><img src="../icons/pubproperty.gif" /></td><td><a href="1a35f329-b033-4163-4746-e4f171fbba26.htm">Width</a></td><td><div class="summary"> 
            Get the width (#Cols) of the cvArray.
            If ROI is set, the width of the ROI 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d81ef353-ec71-ccfa-0309-00c372f6a052.htm">WriteXml(XmlWriter)</a></td><td><div class="summary">
            Function to call when serializing this object to XML 
            </div> (Inherited from <a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f06bfa7a-ae94-b7a2-eefb-e559fbb7b05b.htm">Xor(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary"> Perform an elementwise XOR operation with another image and return the result</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="269ebd15-ed48-f96f-8fbe-535821054b72.htm">Xor(Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Perform an elementwise XOR operation with another image, using a mask, and return the result
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7659db45-933a-bd23-0197-24694ee1a028.htm">Xor(TColor)</a></td><td><div class="summary"> 
            Perform an binary XOR operation with some color
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="93f93ede-1e50-1f50-eea5-01bcdf5b9d05.htm">Xor(TColor, Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Gray, Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Perform an binary XOR operation with some color using a mask
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="6"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td colspan="5"><a href="1a248c0b-75ce-eae1-d650-521f24d4d308.htm">DisposableObject</a></td></tr><tr><td> </td><td><img src="../icons/LastChild.gif" /></td><td colspan="4"><a href="f7d6df34-2ee0-1ad2-b53f-4b95f3f7d12f.htm">UnmanagedObject</a></td></tr><tr><td> </td><td> </td><td><img src="../icons/LastChild.gif" /></td><td colspan="3"><a href="7fc0991d-4a1a-4010-3c3f-f68fcf148838.htm">CvArray</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><span class="selflink"><span class="typeparam">TDepth</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></td></tr><tr><td> </td><td> </td><td> </td><td><img src="../icons/LastChild.gif" /></td><td colspan="2"><span class="selflink">Image<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></span></td></tr><tr><td> </td><td> </td><td> </td><td> </td><td><img src="../icons/NotLastChild.gif" /></td><td><a href="5bc8af8f-5dc5-8d9b-eb1b-c937dfa152e6.htm">Map<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a></td></tr><tr><td> </td><td> </td><td> </td><td> </td><td><img src="../icons/LastChild.gif" /></td><td><a href="dfd4e717-a77d-6eb4-591e-93b20668d129.htm">TimedImage<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TColor, TDepth<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span></a></td></tr></table></div></div><p><div id="footer">For questions and discussions please visit www.emgu.com/forum<p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:emgucv%40gmail.com?Subject=Emgu CV Library Documentation">emgucv@gmail.com</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p />2008 Emgu, All Rights Reserved,</div>Assembly: <span sdata="assembly">Emgu.CV</span> (Module: Emgu.CV) Version: 1.5.0.0 (1.5.0.0)</p></div></body></html>